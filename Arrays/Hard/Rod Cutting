Given a rod of length N inches and an array of prices, price[]. price[i] denotes the value of a piece of length i. Determine the maximum value obtainable by cutting up the rod and selling the pieces.

Note: Consider 1-based indexing.


CODE:

//{ Driver Code Starts
// Initial Template for C++

#include <bits/stdc++.h>
using namespace std;


// } Driver Code Ends
// User function Template for C++

class Solution{
  public:
    int dp[1001];
    int recursion(int price[],int n,int count){
        if(count>n){
            return INT_MIN;
        }
        
        if(dp[count]!=-1){
            return dp[count];
        }
        int ans = 0;
        for(int i =0;i<n;i++){
            ans =  max(ans,price[i]+recursion(price,n,count+i+1));
        }
        return dp[count]=ans;
    }
    int cutRod(int price[], int n) {
        //code here
        for(int i =0;i<1001;i++){
            dp[i]=-1;
        }
        return recursion(price,n,0);
    }
};

//{ Driver Code Starts.

int main() {
    int t;
    cin >> t;
    while (t--) {
        int n;
        cin >> n;
        int a[n];
        for (int i = 0; i < n; i++) 
            cin >> a[i];
            
        Solution ob;

        cout << ob.cutRod(a, n) << endl;
    }
    return 0;
}
// } Driver Code Ends
