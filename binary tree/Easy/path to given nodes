/*Path to Given Node

Problem Description

Given a Binary Tree A containing N nodes.

You need to find the path from Root to a given node B.

NOTE:

No two nodes in the tree have same data values.
You can assume that B is present in the tree A and a path always exists.
*/


CODE:

**
 * Definition for binary tree
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode(int x) : val(x), left(NULL), right(NULL) {}
 * };
 */

bool getpath(TreeNode* root,vector<int>&ans,int x){
     
     if(root == NULL)
     return false;
     
     ans.push_back(root->val);
     if(root->val == x)
     return true;
     
     if(getpath(root->left,ans,x) || getpath(root->right,ans,x))
     return true;
     
     ans.pop_back();
     return false;
     
     
     
     
 }
 
 
 
 vector<int> Solution::solve(TreeNode* A, int B){
    vector<int>ans;
    if(A == NULL)
    return ans;
    
    getpath(A,ans,B);
    return ans;
}

