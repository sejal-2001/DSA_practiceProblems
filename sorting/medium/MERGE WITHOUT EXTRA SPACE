//{ Driver Code Starts
#include <bits/stdc++.h> 
using namespace std; 


// } Driver Code Ends
class Solution{
    public:
        //Function to merge the arrays.
        void merge(long long arr1[], long long arr2[], int n, int m) 
        { 
            // code here 
            // code here 
            int i =n;
            int j = m;
            make_heap(arr1,arr1+n,greater<int>());
            make_heap(arr2,arr2+m,greater<int>());
            
            while(i != 0){
                
                int a1 = arr1[0];
                int a2 = arr2[0];
                
                if (a1 <= a2){
                    pop_heap(arr1,arr1+i,greater<int>());
                    i--;
                }
                else{
                    pop_heap(arr1,arr1+i,greater<int>());
                    i--;
                    arr1[i]=a2;
                    pop_heap(arr2,arr2+j,greater<int>());
                    arr2[m-1] = a1;
                    push_heap(arr2,arr2+j,greater<int>());
                }
                
            }
            
            reverse(arr1,arr1+n);
            make_heap(arr2,arr2+m);
            sort_heap(arr2,arr2+m);
        } 
};

//{ Driver Code Starts.

int main() 
{ 
	
	int T;
	cin >> T;
	
	while(T--){
	    int n, m;
	    cin >> n >> m;
	    
	    long long arr1[n], arr2[m];
	    
	    for(int i = 0;i<n;i++){
	        cin >> arr1[i];
	    }
	    
	    for(int i = 0;i<m;i++){
	        cin >> arr2[i];
	    }
	    Solution ob;
	    ob.merge(arr1, arr2, n, m); 

        for (int i = 0; i < n; i++) 
            cout<<arr1[i]<<" "; 
        
       
	    for (int i = 0; i < m; i++) 
		    cout<<arr2[i]<<" "; 
	    
	    cout<<endl;
	}

	return 0; 
} 

// } Driver Code Ends
